<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <style>
    div {
      display: grid;
      grid-template-columns: repeat(auto-fill, 300px);
      grid-auto-rows: 300px;
    }

    video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  </style>
  <body>
    <div id="video-grid"></div>
  </body>
</html>
<script src="/socket.io/socket.io.js"></script>
<script src="https://unpkg.com/peerjs@1.4.7/dist/peerjs.min.js"></script>
<script>
  const socket = io();
  const peer = new Peer(undefined, {
    host: "/",
    port: "8001",
  });

  const mydiv = document.querySelector("div");
  const videoG = document.createElement("video");
  videoG.muted = true;
  const peers = {};
  navigator.mediaDevices
    .getUserMedia({
      video: true,
      audio: true,
    })
    .then((stream) => {
      addVideoStream(videoG, stream);

      peer.on("call", (call) => {
        console.log(1);
        call.answer(call);
      });
      socket.on("server", (e) => {
        connecttouser(e, stream);
      });
    });

  const id = "<%= id %>";
  socket.emit("user_entered", id);

  function addVideoStream(video, stream) {
    console.log(video);
    video.srcObject = stream;
    video.addEventListener("loadedmetadata", () => {
      video.play();
    });
    mydiv.append(video);
  }

  function connecttouser(userid, stream) {
    const call = peer.call(userid, stream);
    const videoagain = document.createElement('video')
    // console.log(call.on("stream"));
    // call.on("stream",()=>{console.log(1)})
    call.on("stream", (userstream) => {
      console.log("inside")
      addVideoStream(videoagain, userstream);
    });
    call.on("close", () => {
      video.remove();
    });
  }
</script>
